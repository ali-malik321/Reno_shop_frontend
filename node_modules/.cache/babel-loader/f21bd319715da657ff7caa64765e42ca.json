{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport authAPI from '../../api/authApi';\nimport paymentAPI from '../../api/paymentApi';\nimport userAPI from '../../api/userApi';\nimport { getAllUser, getUser } from '../slices/userSlice';\nexport const login = createAsyncThunk('auth/login', async (data, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    return await authAPI.login(data);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const signUp = createAsyncThunk('auth/signUp', async (data, _ref2) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref2;\n\n  try {\n    const result = await authAPI.register(data);\n    dispatch(getAllUser());\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const updateUser = createAsyncThunk('user/updateUser', async (data, _ref3) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref3;\n\n  try {\n    const result = await userAPI.updateUser(data);\n    dispatch(getUser(data._id));\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const payment = createAsyncThunk('user/payment', async (data, _ref4) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref4;\n\n  try {\n    const result = paymentAPI.addPayment(data);\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: {}\n  },\n  reducers: {\n    clearUser: state => {\n      state.user = {};\n    }\n  },\n  extraReducers: {\n    [login.fulfilled]: (state, action) => {\n      // console.log(action.payload.user)\n      state.user = action.payload.user;\n    },\n    [updateUser.fulfilled]: (state, action) => {\n      state.user = action.payload.user;\n    }\n  }\n});\nexport const {\n  clearUser\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"sources":["/home/ali/Reno-shoe-shop/client/src/redux/slices/authSlice.js"],"names":["createAsyncThunk","createSlice","authAPI","paymentAPI","userAPI","getAllUser","getUser","login","data","rejectWithValue","error","response","signUp","dispatch","result","register","updateUser","_id","payment","addPayment","authSlice","name","initialState","user","reducers","clearUser","state","extraReducers","fulfilled","action","payload","actions","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport authAPI from '../../api/authApi'\nimport paymentAPI from '../../api/paymentApi'\nimport userAPI from '../../api/userApi'\nimport { getAllUser, getUser } from '../slices/userSlice'\n\nexport const login = createAsyncThunk(\n\t'auth/login',\n\tasync (data, { rejectWithValue }) => {\n\t\ttry {\n\t\t\treturn await authAPI.login(data)\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const signUp = createAsyncThunk(\n\t'auth/signUp',\n\tasync (data, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await authAPI.register(data)\n\n\t\t\tdispatch(getAllUser())\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const updateUser = createAsyncThunk(\n\t'user/updateUser',\n\tasync (data, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await userAPI.updateUser(data)\n\n\t\t\tdispatch(getUser(data._id))\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const payment = createAsyncThunk(\n\t'user/payment',\n\tasync (data, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = paymentAPI.addPayment(data)\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nconst authSlice = createSlice({\n\tname: 'auth',\n\tinitialState: {\n\t\tuser: {},\n\t},\n\treducers: {\n\t\tclearUser: (state) => {\n\t\t\tstate.user = {}\n\t\t},\n\t},\n\textraReducers: {\n\t\t[login.fulfilled]: (state, action) => {\n\t\t\t// console.log(action.payload.user)\n\t\t\tstate.user = action.payload.user\n\t\t},\n\t\t[updateUser.fulfilled]: (state, action) => {\n\t\t\tstate.user = action.payload.user\n\t\t},\n\t},\n})\n\nexport const { clearUser } = authSlice.actions\nexport default authSlice.reducer\n"]},"metadata":{},"sourceType":"module"}