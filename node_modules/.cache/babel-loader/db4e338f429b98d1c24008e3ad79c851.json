{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport productAPI from '../../api/productApi';\nimport uploadAPI from '../../api/uploadApi';\nexport const getAllProduct = createAsyncThunk('product/getAllProduct', async (params, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    return await productAPI.getAllProduct(params);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nconsole.log('getproducts:', getAllProduct);\nexport const getProduct = createAsyncThunk('product/getProduct', async (id, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    console.log(id);\n    return await productAPI.getProduct(id);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nconsole.log('getproducts:', getProduct);\nexport const addProduct = createAsyncThunk('product/addProduct', async (data, _ref3) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref3;\n\n  try {\n    const result = await productAPI.addProduct(data);\n    console.log('product data:', result);\n    dispatch(getAllProduct());\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const updateProduct = createAsyncThunk('product/updateProduct', async (data, _ref4) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref4;\n\n  try {\n    const result = await productAPI.updateProduct(data);\n    dispatch(getAllProduct());\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const deleteProduct = createAsyncThunk('product/deleteProduct', async (id, _ref5) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref5;\n\n  try {\n    const result = await productAPI.deleteProduct(id);\n    dispatch(getAllProduct());\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const upload = createAsyncThunk('product/upload', async files => {\n  return await uploadAPI.upload(files);\n});\nconst initialState = {\n  products: [],\n  productsLoading: false,\n  product: {},\n  productLoading: false\n};\nconst productSlice = createSlice({\n  name: 'product',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getAllProduct.pending]: state => {\n      state.productsLoading = true;\n    },\n    [getAllProduct.fulfilled]: (state, action) => {\n      state.productsLoading = false;\n      state.products = action.payload.products;\n    },\n    [getProduct.pending]: state => {\n      state.productLoading = true;\n    },\n    [getProduct.fulfilled]: (state, action) => {\n      state.productLoading = false;\n      state.product = action.payload.product;\n    }\n  }\n});\nexport default productSlice.reducer;","map":{"version":3,"sources":["/home/ali/Reno_shop_frontend/src/redux/slices/productSlice.js"],"names":["createAsyncThunk","createSlice","productAPI","uploadAPI","getAllProduct","params","rejectWithValue","error","response","console","log","getProduct","id","addProduct","data","dispatch","result","updateProduct","deleteProduct","upload","files","initialState","products","productsLoading","product","productLoading","productSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport productAPI from '../../api/productApi'\nimport uploadAPI from '../../api/uploadApi'\n\nexport const getAllProduct = createAsyncThunk(\n\t'product/getAllProduct',\n\tasync (params, { rejectWithValue }) => {\n\t\ttry {\n\t\t\treturn await productAPI.getAllProduct(params)\n\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\nconsole.log('getproducts:',getAllProduct)\n\nexport const getProduct = createAsyncThunk(\n\t'product/getProduct',\n\tasync (id, { rejectWithValue }) => {\n\t\ttry {\n\t\t\tconsole.log(id)\n\n\t\t\treturn await productAPI.getProduct(id)\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\nconsole.log('getproducts:',getProduct)\n\nexport const addProduct = createAsyncThunk(\n\t'product/addProduct',\n\tasync (data, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await productAPI.addProduct(data)\nconsole.log('product data:',result)\n\t\t\tdispatch(getAllProduct())\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const updateProduct = createAsyncThunk(\n\t'product/updateProduct',\n\tasync (data, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await productAPI.updateProduct(data)\n\n\t\t\tdispatch(getAllProduct())\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const deleteProduct = createAsyncThunk(\n\t'product/deleteProduct',\n\tasync (id, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await productAPI.deleteProduct(id)\n\n\t\t\tdispatch(getAllProduct())\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const upload = createAsyncThunk('product/upload', async (files) => {\n\treturn await uploadAPI.upload(files)\n})\n\nconst initialState = {\n\tproducts: [],\n\tproductsLoading: false,\n\tproduct: {},\n\tproductLoading: false,\n}\n\nconst productSlice = createSlice({\n\tname: 'product',\n\tinitialState,\n\treducers: {},\n\textraReducers: {\n\t\t[getAllProduct.pending]: (state) => {\n\t\t\tstate.productsLoading = true\n\t\t},\n\t\t[getAllProduct.fulfilled]: (state, action) => {\n\t\t\tstate.productsLoading = false\n\t\t\tstate.products = action.payload.products\n\t\t},\n\t\t[getProduct.pending]: (state) => {\n\t\t\tstate.productLoading = true\n\t\t},\n\t\t[getProduct.fulfilled]: (state, action) => {\n\t\t\tstate.productLoading = false\n\t\t\tstate.product = action.payload.product\n\t\t},\n\t},\n})\n\nexport default productSlice.reducer\n"]},"metadata":{},"sourceType":"module"}