{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport sizeAPI from '../../api/sizeApi';\nexport const getAllSize = createAsyncThunk('size/getAllSize', async (_, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    return await sizeAPI.getAllSize();\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const getSize = createAsyncThunk('size/getSize', async (id, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    return await sizeAPI.getSize(id);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const addSize = createAsyncThunk('size/addSize', async (data, _ref3) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref3;\n\n  try {\n    const result = await sizeAPI.addSize(data);\n    dispatch(getAllSize());\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const updateSize = createAsyncThunk('size/updateSize', async (data, _ref4) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref4;\n\n  try {\n    const result = await sizeAPI.updateSize(data);\n    dispatch(getAllSize());\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const deleteSize = createAsyncThunk('size/deleteSize', async (id, _ref5) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref5;\n\n  try {\n    const result = await sizeAPI.deleteSize(id);\n    dispatch(getAllSize());\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nconst initialState = {\n  sizes: [],\n  sizesLoading: false,\n  size: {},\n  sizeLoading: false\n};\nconst sizeSlice = createSlice({\n  name: 'size',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getAllSize.pending]: state => {\n      state.sizesLoading = true;\n    },\n    [getAllSize.fulfilled]: (state, action) => {\n      state.sizesLoading = false;\n      state.sizes = action.payload.sizes;\n    }\n  }\n});\nexport default sizeSlice.reducer;","map":{"version":3,"sources":["/home/ali/Reno-shoe-shop-frontend/client/src/redux/slices/sizeSlice.js"],"names":["createAsyncThunk","createSlice","sizeAPI","getAllSize","_","rejectWithValue","error","response","getSize","id","addSize","data","dispatch","result","updateSize","deleteSize","initialState","sizes","sizesLoading","size","sizeLoading","sizeSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport sizeAPI from '../../api/sizeApi'\n\nexport const getAllSize = createAsyncThunk(\n\t'size/getAllSize',\n\tasync (_, { rejectWithValue }) => {\n\t\ttry {\n\t\t\treturn await sizeAPI.getAllSize()\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const getSize = createAsyncThunk(\n\t'size/getSize',\n\tasync (id, { rejectWithValue }) => {\n\t\ttry {\n\t\t\treturn await sizeAPI.getSize(id)\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const addSize = createAsyncThunk(\n\t'size/addSize',\n\tasync (data, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await sizeAPI.addSize(data)\n\n\t\t\tdispatch(getAllSize())\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const updateSize = createAsyncThunk(\n\t'size/updateSize',\n\tasync (data, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await sizeAPI.updateSize(data)\n\n\t\t\tdispatch(getAllSize())\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const deleteSize = createAsyncThunk(\n\t'size/deleteSize',\n\tasync (id, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await sizeAPI.deleteSize(id)\n\n\t\t\tdispatch(getAllSize())\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nconst initialState = {\n\tsizes: [],\n\tsizesLoading: false,\n\tsize: {},\n\tsizeLoading: false,\n}\n\nconst sizeSlice = createSlice({\n\tname: 'size',\n\tinitialState,\n\treducers: {},\n\textraReducers: {\n\t\t[getAllSize.pending]: (state) => {\n\t\t\tstate.sizesLoading = true\n\t\t},\n\t\t[getAllSize.fulfilled]: (state, action) => {\n\t\t\tstate.sizesLoading = false\n\t\t\tstate.sizes = action.payload.sizes\n\t\t},\n\t},\n})\n\nexport default sizeSlice.reducer\n"]},"metadata":{},"sourceType":"module"}