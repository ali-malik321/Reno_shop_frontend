{"ast":null,"code":"// configureStore.js\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // defaults to localStorage for web\n// Reducers\n\nimport authReducer from './slices/authSlice';\nimport sizeReducer from './slices/sizeSlice';\nimport categoryReducer from './slices/categorySlice';\nimport productReducer from './slices/productSlice';\nimport userReducer from './slices/userSlice';\nimport orderReducer from './slices/orderSlice';\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  size: sizeReducer,\n  category: categoryReducer,\n  product: productReducer,\n  user: userReducer,\n  order: orderReducer\n});\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport let store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"sources":["/home/ali/Reno-shoe-shop-frontend/client/src/redux/store.js"],"names":["configureStore","getDefaultMiddleware","combineReducers","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","authReducer","sizeReducer","categoryReducer","productReducer","userReducer","orderReducer","rootReducer","auth","size","category","product","user","order","persistConfig","key","persistedReducer","store","reducer","middleware","serializableCheck","ignoredActions","persistor"],"mappings":"AAAA;AACA,SAASA,cAAT,EAAyBC,oBAAzB,QAAqD,kBAArD;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SACCC,YADD,EAECC,cAFD,EAGCC,KAHD,EAICC,SAJD,EAKCC,KALD,EAMCC,OAND,EAOCC,KAPD,EAQCC,QARD,QASO,eATP;AAUA,OAAOC,OAAP,MAAoB,2BAApB,C,CAAgD;AAEhD;;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,eAAP,MAA4B,wBAA5B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AAEA,MAAMC,WAAW,GAAGhB,eAAe,CAAC;AACnCiB,EAAAA,IAAI,EAAEP,WAD6B;AAEnCQ,EAAAA,IAAI,EAAEP,WAF6B;AAGnCQ,EAAAA,QAAQ,EAAEP,eAHyB;AAInCQ,EAAAA,OAAO,EAAEP,cAJ0B;AAKnCQ,EAAAA,IAAI,EAAEP,WAL6B;AAMnCQ,EAAAA,KAAK,EAAEP;AAN4B,CAAD,CAAnC;AASA,MAAMQ,aAAa,GAAG;AACrBC,EAAAA,GAAG,EAAE,MADgB;AAErBf,EAAAA;AAFqB,CAAtB;AAKA,MAAMgB,gBAAgB,GAAGvB,cAAc,CAACqB,aAAD,EAAgBP,WAAhB,CAAvC;AAEA,OAAO,IAAIU,KAAK,GAAG5B,cAAc,CAAC;AACjC6B,EAAAA,OAAO,EAAEF,gBADwB;AAEjCG,EAAAA,UAAU,EAAE7B,oBAAoB,CAAC;AAChC8B,IAAAA,iBAAiB,EAAE;AAClBC,MAAAA,cAAc,EAAE,CAAC3B,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;AADE;AADa,GAAD;AAFC,CAAD,CAA1B;AAQP,OAAO,IAAIuB,SAAS,GAAG9B,YAAY,CAACyB,KAAD,CAA5B","sourcesContent":["// configureStore.js\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'\nimport { combineReducers } from 'redux'\nimport {\n\tpersistStore,\n\tpersistReducer,\n\tFLUSH,\n\tREHYDRATE,\n\tPAUSE,\n\tPERSIST,\n\tPURGE,\n\tREGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\n\n// Reducers\nimport authReducer from './slices/authSlice'\nimport sizeReducer from './slices/sizeSlice'\nimport categoryReducer from './slices/categorySlice'\nimport productReducer from './slices/productSlice'\nimport userReducer from './slices/userSlice'\nimport orderReducer from './slices/orderSlice'\n\nconst rootReducer = combineReducers({\n\tauth: authReducer,\n\tsize: sizeReducer,\n\tcategory: categoryReducer,\n\tproduct: productReducer,\n\tuser: userReducer,\n\torder: orderReducer,\n})\n\nconst persistConfig = {\n\tkey: 'root',\n\tstorage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport let store = configureStore({\n\treducer: persistedReducer,\n\tmiddleware: getDefaultMiddleware({\n\t\tserializableCheck: {\n\t\t\tignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n\t\t},\n\t}),\n})\nexport let persistor = persistStore(store)\n"]},"metadata":{},"sourceType":"module"}