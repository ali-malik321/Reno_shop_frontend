{"ast":null,"code":"var _jsxFileName = \"/home/ali/Reno_shop_frontend/src/pages/admin/Product/AddEditProduct/AddEditProduct.js\",\n    _s = $RefreshSig$();\n\nimport { Box, Button, Checkbox, FormControl, FormControlLabel, MenuItem, Radio, RadioGroup, TextField, Typography } from '@material-ui/core';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { unwrapResult } from '@reduxjs/toolkit';\nimport React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet-async';\nimport { Controller, useForm } from 'react-hook-form';\nimport { BiCheckbox, BiCheckboxChecked } from 'react-icons/bi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css'; // requires a loader\n\nimport { useLocation } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport AdminLayout from '../../../../component/admin/AdminLayout/AdminLayout';\nimport { getAllCategory } from '../../../../redux/slices/categorySlice';\nimport { addProduct, updateProduct, upload } from '../../../../redux/slices/productSlice';\nimport { getAllSize } from '../../../../redux/slices/sizeSlice';\nimport { useStyles } from './styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst icon = /*#__PURE__*/_jsxDEV(BiCheckbox, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 14\n}, this);\n\nconst checkedIcon = /*#__PURE__*/_jsxDEV(BiCheckboxChecked, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 21\n}, this);\n\nconst AddEditProduct = () => {\n  _s();\n\n  var _location$state, _location$state$inSto2, _location$state2, _location$state2$cate;\n\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const categories = useSelector(state => state.category.categories);\n  const sizes = useSelector(state => state.size.sizes);\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control\n  } = useForm();\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchData = () => {\n      const action = getAllCategory();\n      dispatch(action);\n      const action2 = getAllSize();\n      dispatch(action2);\n    };\n\n    fetchData();\n  }, []); // autocomplete\n\n  const [value, setValue] = useState([]); // Handle select multiple images\n\n  const [imagesDisplay, setImagesDisplay] = useState([]);\n  const [imagesUpload, setImagesUpload] = useState([]);\n  useEffect(() => {\n    if (location.state) {\n      var _location$state$inSto;\n\n      reset({\n        name: location === null || location === void 0 ? void 0 : location.state.name,\n        desc: location === null || location === void 0 ? void 0 : location.state.desc,\n        price: location === null || location === void 0 ? void 0 : location.state.price,\n        quantity: location === null || location === void 0 ? void 0 : location.state.quantity,\n        inStock: location === null || location === void 0 ? void 0 : (_location$state$inSto = location.state.inStock) === null || _location$state$inSto === void 0 ? void 0 : _location$state$inSto.toString()\n      });\n      setImagesDisplay(() => {\n        return location.state.images.map(image => {\n          return image;\n        });\n      });\n      setValue(location.state.size);\n    }\n  }, [location.state]);\n\n  const handleOnChangePictures = e => {\n    var _Array$from;\n\n    const files = e.target.files;\n    const arrImagesPreview = [];\n    const arrImagesUpload = [];\n    (_Array$from = Array.from(files)) === null || _Array$from === void 0 ? void 0 : _Array$from.forEach(file => {\n      const image = {\n        preview: URL.createObjectURL(file)\n      };\n      arrImagesPreview.push(image);\n      arrImagesUpload.push(file);\n    });\n    setImagesDisplay(arrImagesPreview);\n    setImagesUpload(arrImagesUpload);\n  };\n\n  useEffect(() => {\n    return () => {\n      (imagesDisplay === null || imagesDisplay === void 0 ? void 0 : imagesDisplay.length) > 0 && imagesDisplay.forEach(image => {\n        URL.revokeObjectURL(image.preview);\n      });\n    };\n  }, [imagesDisplay]); // handle product\n\n  const handleAddProduct = data => {\n    console.log(data);\n\n    if (imagesUpload.length === 0) {\n      setError('Images are required');\n      return;\n    }\n\n    if (value.length === 0) {\n      console.log(value);\n      setError('Sizes are required');\n      return;\n    }\n\n    const action = upload(imagesUpload);\n    dispatch(action).then(unwrapResult).then(res => {\n      const product = { ...data,\n        size: sizes,\n        images: res\n      };\n      const action = addProduct(product);\n      dispatch(action).then(unwrapResult).then(() => {\n        reset();\n        setImagesUpload([]);\n        setImagesDisplay([]);\n        setError('');\n        setValue([]);\n        toast('Add product successfully!', {\n          position: 'bottom-center',\n          autoClose: 3000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          type: 'success'\n        });\n      }).catch(error => setError('Name has already been taken'));\n    }).catch(error => console.log(error));\n  };\n\n  const handleEditProduct = data => {\n    if (imagesUpload.length === 0) {\n      // Not change images\n      const sizes = value.map(size => {\n        return size._id;\n      });\n      const product = { ...data,\n        size: sizes,\n        _id: location.state._id\n      };\n      const action = updateProduct(product);\n      dispatch(action).then(unwrapResult).then(() => {}).catch(error => setError('Name has already been taken'));\n    } else {\n      const action = upload(imagesUpload);\n      dispatch(action).then(unwrapResult).then(res => {\n        const product = { ...data,\n          size: sizes,\n          _id: location.state._id,\n          images: res\n        };\n        const action = updateProduct(product);\n        dispatch(action).then(unwrapResult).then(() => {\n          toast('Update product successfully!', {\n            position: 'bottom-center',\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            type: 'success'\n          });\n        }).catch(error => setError('Name has already been taken'));\n      }).catch(error => console.log(error));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"Reno - Admin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meta\", {\n        name: \"description\",\n        content: \"Helmet application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(AdminLayout, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          component: \"h3\",\n          className: classes.heading,\n          children: [location.state ? 'Update' : 'New', \" product\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.content,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: classes.form,\n            onSubmit: handleSubmit(location.state ? handleEditProduct : handleAddProduct),\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: classes.uploadContainer,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                accept: \"image/*\",\n                className: classes.input,\n                style: {\n                  display: 'none'\n                },\n                id: \"raised-button-file\",\n                multiple: true,\n                type: \"file\",\n                onChange: handleOnChangePictures\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"raised-button-file\",\n                children: [\"Images\", /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"raised\",\n                  component: \"span\",\n                  className: classes.uploadBtn,\n                  children: \"Upload\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 10\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Name\",\n              variant: \"outlined\",\n              className: classes.inputGroup,\n              ...register('name'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Desc\",\n              variant: \"outlined\",\n              className: classes.inputGroup,\n              ...register('desc'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              label: \"Price\",\n              type: \"number\",\n              variant: \"outlined\",\n              className: classes.inputGroup,\n              ...register('price'),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              component: \"fieldset\",\n              className: classes.inStock,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body1\",\n                style: {\n                  marginRight: 20\n                },\n                children: \"In stock:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(Controller, {\n                rules: {\n                  required: true\n                },\n                control: control,\n                defaultValue: (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$inSto2 = _location$state.inStock) === null || _location$state$inSto2 === void 0 ? void 0 : _location$state$inSto2.toString()) || 'true',\n                ...register('inStock'),\n                required: true,\n                render: _ref => {\n                  let {\n                    field\n                  } = _ref;\n                  const {\n                    onBlur,\n                    onChange,\n                    value\n                  } = field;\n                  return /*#__PURE__*/_jsxDEV(RadioGroup, {\n                    style: {\n                      flexDirection: 'row'\n                    },\n                    ...field,\n                    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: \"true\",\n                      control: /*#__PURE__*/_jsxDEV(Radio, {\n                        style: {\n                          color: '#1a202c',\n                          '&$checked': {\n                            color: '#1a202c'\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 271,\n                        columnNumber: 15\n                      }, this),\n                      label: \"True\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 268,\n                      columnNumber: 13\n                    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                      value: \"false\",\n                      control: /*#__PURE__*/_jsxDEV(Radio, {\n                        style: {\n                          color: '#1a202c',\n                          '&$checked': {\n                            color: '#1a202c'\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 285,\n                        columnNumber: 15\n                      }, this),\n                      label: \"false\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 13\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 267,\n                    columnNumber: 12\n                  }, this);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(TextField, {\n              className: classes.inputGroup,\n              id: \"select\",\n              label: \"Category\",\n              select: true,\n              variant: \"outlined\",\n              ...register('category'),\n              defaultValue: location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : (_location$state2$cate = _location$state2.category) === null || _location$state2$cate === void 0 ? void 0 : _location$state2$cate._id,\n              required: true,\n              children: categories === null || categories === void 0 ? void 0 : categories.map(category => {\n                return /*#__PURE__*/_jsxDEV(MenuItem, {\n                  value: category._id,\n                  children: category.name\n                }, category._id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 11\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n              className: classes.inputGroup,\n              id: \"combo-box-demo\",\n              multiple: true,\n              disableCloseOnSelect: true,\n              value: value,\n              options: sizes,\n              getOptionLabel: option => option.name,\n              getOptionSelected: (option, value) => value._id === option._id,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params,\n                label: \"Size\",\n                variant: \"outlined\",\n                fullWidth: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 10\n              }, this),\n              renderOption: (option, _ref2) => {\n                let {\n                  selected\n                } = _ref2;\n                return /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n                    icon: icon,\n                    checkedIcon: checkedIcon,\n                    style: {\n                      marginRight: 8\n                    },\n                    checked: selected\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 11\n                  }, this), option.name]\n                }, void 0, true);\n              },\n              onChange: (_, selectedOptions) => setValue(selectedOptions)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 8\n            }, this), error !== '' && /*#__PURE__*/_jsxDEV(Typography, {\n              component: \"p\",\n              className: classes.error,\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              className: classes.saveBtn,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Carousel, {\n            showIndicators: false,\n            showArrows: false,\n            showStatus: false,\n            className: classes.carousel,\n            children: (imagesDisplay === null || imagesDisplay === void 0 ? void 0 : imagesDisplay.length) > 0 && imagesDisplay.map(image => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: image.preview,\n                  alt: \"imageproduct\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 11\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n        position: \"bottom-center\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        newestOnTop: false,\n        closeOnClick: true,\n        rtl: false,\n        pauseOnFocusLoss: true,\n        draggable: true,\n        pauseOnHover: true,\n        theme: \"dark\",\n        type: \"default\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddEditProduct, \"dujaGVBHNn7jILyDyKKGzVyO9Lk=\", false, function () {\n  return [useStyles, useDispatch, useLocation, useSelector, useSelector, useForm];\n});\n\n_c = AddEditProduct;\nexport default AddEditProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditProduct\");","map":{"version":3,"sources":["/home/ali/Reno_shop_frontend/src/pages/admin/Product/AddEditProduct/AddEditProduct.js"],"names":["Box","Button","Checkbox","FormControl","FormControlLabel","MenuItem","Radio","RadioGroup","TextField","Typography","Autocomplete","unwrapResult","React","useEffect","useState","Helmet","Controller","useForm","BiCheckbox","BiCheckboxChecked","useDispatch","useSelector","Carousel","useLocation","toast","ToastContainer","AdminLayout","getAllCategory","addProduct","updateProduct","upload","getAllSize","useStyles","icon","checkedIcon","AddEditProduct","classes","dispatch","location","categories","state","category","sizes","size","register","handleSubmit","reset","control","error","setError","fetchData","action","action2","value","setValue","imagesDisplay","setImagesDisplay","imagesUpload","setImagesUpload","name","desc","price","quantity","inStock","toString","images","map","image","handleOnChangePictures","e","files","target","arrImagesPreview","arrImagesUpload","Array","from","forEach","file","preview","URL","createObjectURL","push","length","revokeObjectURL","handleAddProduct","data","console","log","then","res","product","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","type","catch","handleEditProduct","_id","container","heading","content","form","uploadContainer","input","display","uploadBtn","inputGroup","marginRight","required","field","onBlur","onChange","flexDirection","color","option","params","selected","_","selectedOptions","saveBtn","carousel"],"mappings":";;;AAAA,SACCA,GADD,EAECC,MAFD,EAGCC,QAHD,EAICC,WAJD,EAKCC,gBALD,EAMCC,QAND,EAOCC,KAPD,EAQCC,UARD,EASCC,SATD,EAUCC,UAVD,QAWO,mBAXP;AAYA,OAAOC,YAAP,MAAyB,+BAAzB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,gBAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAO,uDAAP,C,CAA+D;;AAC/D,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,EAAgBC,cAAhB,QAAsC,gBAAtC;AACA,OAAOC,WAAP,MAAwB,qDAAxB;AACA,SAASC,cAAT,QAA+B,wCAA/B;AACA,SACCC,UADD,EAECC,aAFD,EAGCC,MAHD,QAIO,uCAJP;AAKA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,SAAT,QAA0B,UAA1B;;;;AAEA,MAAMC,IAAI,gBAAG,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,QAAb;;AACA,MAAMC,WAAW,gBAAG,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,QAApB;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAAA;;AAC5B,QAAMC,OAAO,GAAGJ,SAAS,EAAzB;AACA,QAAMK,QAAQ,GAAGjB,WAAW,EAA5B;AACA,QAAMkB,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMgB,UAAU,GAAGlB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACC,QAAN,CAAeF,UAA3B,CAA9B;AACA,QAAMG,KAAK,GAAGrB,WAAW,CAAEmB,KAAD,IAAWA,KAAK,CAACG,IAAN,CAAWD,KAAvB,CAAzB;AACA,QAAM;AAAEE,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA6C9B,OAAO,EAA1D;AACA,QAAM,CAAC+B,KAAD,EAAQC,QAAR,IAAoBnC,QAAQ,CAAC,EAAD,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,UAAMqC,SAAS,GAAG,MAAM;AACvB,YAAMC,MAAM,GAAGxB,cAAc,EAA7B;AACAU,MAAAA,QAAQ,CAACc,MAAD,CAAR;AAEA,YAAMC,OAAO,GAAGrB,UAAU,EAA1B;AACAM,MAAAA,QAAQ,CAACe,OAAD,CAAR;AACA,KAND;;AAOAF,IAAAA,SAAS;AACT,GATQ,EASN,EATM,CAAT,CAT4B,CAoB5B;;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBxC,QAAQ,CAAC,EAAD,CAAlC,CArB4B,CAuB5B;;AACA,QAAM,CAACyC,aAAD,EAAgBC,gBAAhB,IAAoC1C,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC2C,YAAD,EAAeC,eAAf,IAAkC5C,QAAQ,CAAC,EAAD,CAAhD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACf,QAAIyB,QAAQ,CAACE,KAAb,EAAoB;AAAA;;AACnBM,MAAAA,KAAK,CAAC;AACLa,QAAAA,IAAI,EAAErB,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEE,KAAV,CAAgBmB,IADjB;AAELC,QAAAA,IAAI,EAAEtB,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEE,KAAV,CAAgBoB,IAFjB;AAGLC,QAAAA,KAAK,EAAEvB,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEE,KAAV,CAAgBqB,KAHlB;AAILC,QAAAA,QAAQ,EAAExB,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEE,KAAV,CAAgBsB,QAJrB;AAKLC,QAAAA,OAAO,EAAEzB,QAAF,aAAEA,QAAF,gDAAEA,QAAQ,CAAEE,KAAV,CAAgBuB,OAAlB,0DAAE,sBAAyBC,QAAzB;AALJ,OAAD,CAAL;AAOAR,MAAAA,gBAAgB,CAAC,MAAM;AACtB,eAAOlB,QAAQ,CAACE,KAAT,CAAeyB,MAAf,CAAsBC,GAAtB,CAA2BC,KAAD,IAAW;AAC3C,iBAAOA,KAAP;AACA,SAFM,CAAP;AAGA,OAJe,CAAhB;AAKAb,MAAAA,QAAQ,CAAChB,QAAQ,CAACE,KAAT,CAAeG,IAAhB,CAAR;AACA;AACD,GAhBQ,EAgBN,CAACL,QAAQ,CAACE,KAAV,CAhBM,CAAT;;AAkBA,QAAM4B,sBAAsB,GAAIC,CAAD,IAAO;AAAA;;AACrC,UAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAME,gBAAgB,GAAG,EAAzB;AACA,UAAMC,eAAe,GAAG,EAAxB;AAEA,mBAAAC,KAAK,CAACC,IAAN,CAAWL,KAAX,6DAAmBM,OAAnB,CAA4BC,IAAD,IAAU;AACpC,YAAMV,KAAK,GAAG;AAAEW,QAAAA,OAAO,EAAEC,GAAG,CAACC,eAAJ,CAAoBH,IAApB;AAAX,OAAd;AACAL,MAAAA,gBAAgB,CAACS,IAAjB,CAAsBd,KAAtB;AACAM,MAAAA,eAAe,CAACQ,IAAhB,CAAqBJ,IAArB;AACA,KAJD;AAKArB,IAAAA,gBAAgB,CAACgB,gBAAD,CAAhB;AACAd,IAAAA,eAAe,CAACe,eAAD,CAAf;AACA,GAZD;;AAcA5D,EAAAA,SAAS,CAAC,MAAM;AACf,WAAO,MAAM;AACZ,OAAA0C,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAE2B,MAAf,IAAwB,CAAxB,IACC3B,aAAa,CAACqB,OAAd,CAAuBT,KAAD,IAAW;AAChCY,QAAAA,GAAG,CAACI,eAAJ,CAAoBhB,KAAK,CAACW,OAA1B;AACA,OAFD,CADD;AAIA,KALD;AAMA,GAPQ,EAON,CAACvB,aAAD,CAPM,CAAT,CA3D4B,CAoE5B;;AACA,QAAM6B,gBAAgB,GAAIC,IAAD,IAAU;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,QAAI5B,YAAY,CAACyB,MAAb,KAAwB,CAA5B,EAA+B;AAC9BjC,MAAAA,QAAQ,CAAC,qBAAD,CAAR;AACA;AACA;;AAED,QAAII,KAAK,CAAC6B,MAAN,KAAiB,CAArB,EAAwB;AACvBI,MAAAA,OAAO,CAACC,GAAR,CAAYlC,KAAZ;AACAJ,MAAAA,QAAQ,CAAC,oBAAD,CAAR;AACA;AACA;;AAED,UAAME,MAAM,GAAGrB,MAAM,CAAC2B,YAAD,CAArB;AACApB,IAAAA,QAAQ,CAACc,MAAD,CAAR,CACEqC,IADF,CACO7E,YADP,EAEE6E,IAFF,CAEQC,GAAD,IAAS;AACd,YAAMC,OAAO,GAAG,EAAE,GAAGL,IAAL;AAAW1C,QAAAA,IAAI,EAAED,KAAjB;AAAwBuB,QAAAA,MAAM,EAAEwB;AAAhC,OAAhB;AACA,YAAMtC,MAAM,GAAGvB,UAAU,CAAC8D,OAAD,CAAzB;AACArD,MAAAA,QAAQ,CAACc,MAAD,CAAR,CACEqC,IADF,CACO7E,YADP,EAEE6E,IAFF,CAEO,MAAM;AACX1C,QAAAA,KAAK;AACLY,QAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,QAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAP,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACAK,QAAAA,QAAQ,CAAC,EAAD,CAAR;AACA9B,QAAAA,KAAK,CAAC,2BAAD,EAA8B;AAClCmE,UAAAA,QAAQ,EAAE,eADwB;AAElCC,UAAAA,SAAS,EAAE,IAFuB;AAGlCC,UAAAA,eAAe,EAAE,KAHiB;AAIlCC,UAAAA,YAAY,EAAE,IAJoB;AAKlCC,UAAAA,YAAY,EAAE,IALoB;AAMlCC,UAAAA,SAAS,EAAE,IANuB;AAOlCC,UAAAA,QAAQ,EAAEC,SAPwB;AAQlCC,UAAAA,IAAI,EAAE;AAR4B,SAA9B,CAAL;AAUA,OAlBF,EAmBEC,KAnBF,CAmBSpD,KAAD,IAAWC,QAAQ,CAAC,6BAAD,CAnB3B;AAoBA,KAzBF,EA0BEmD,KA1BF,CA0BSpD,KAAD,IAAWsC,OAAO,CAACC,GAAR,CAAYvC,KAAZ,CA1BnB;AA2BA,GAzCD;;AA2CA,QAAMqD,iBAAiB,GAAIhB,IAAD,IAAU;AACnC,QAAI5B,YAAY,CAACyB,MAAb,KAAwB,CAA5B,EAA+B;AAC9B;AACA,YAAMxC,KAAK,GAAGW,KAAK,CAACa,GAAN,CAAWvB,IAAD,IAAU;AACjC,eAAOA,IAAI,CAAC2D,GAAZ;AACA,OAFa,CAAd;AAGA,YAAMZ,OAAO,GAAG,EAAE,GAAGL,IAAL;AAAW1C,QAAAA,IAAI,EAAED,KAAjB;AAAwB4D,QAAAA,GAAG,EAAEhE,QAAQ,CAACE,KAAT,CAAe8D;AAA5C,OAAhB;AACA,YAAMnD,MAAM,GAAGtB,aAAa,CAAC6D,OAAD,CAA5B;AACArD,MAAAA,QAAQ,CAACc,MAAD,CAAR,CACEqC,IADF,CACO7E,YADP,EAEE6E,IAFF,CAEO,MAAM,CAAE,CAFf,EAGEY,KAHF,CAGSpD,KAAD,IAAWC,QAAQ,CAAC,6BAAD,CAH3B;AAIA,KAXD,MAWO;AACN,YAAME,MAAM,GAAGrB,MAAM,CAAC2B,YAAD,CAArB;AACApB,MAAAA,QAAQ,CAACc,MAAD,CAAR,CACEqC,IADF,CACO7E,YADP,EAEE6E,IAFF,CAEQC,GAAD,IAAS;AACd,cAAMC,OAAO,GAAG,EACf,GAAGL,IADY;AAEf1C,UAAAA,IAAI,EAAED,KAFS;AAGf4D,UAAAA,GAAG,EAAEhE,QAAQ,CAACE,KAAT,CAAe8D,GAHL;AAIfrC,UAAAA,MAAM,EAAEwB;AAJO,SAAhB;AAMA,cAAMtC,MAAM,GAAGtB,aAAa,CAAC6D,OAAD,CAA5B;AACArD,QAAAA,QAAQ,CAACc,MAAD,CAAR,CACEqC,IADF,CACO7E,YADP,EAEE6E,IAFF,CAEO,MAAM;AACXhE,UAAAA,KAAK,CAAC,8BAAD,EAAiC;AACrCmE,YAAAA,QAAQ,EAAE,eAD2B;AAErCC,YAAAA,SAAS,EAAE,IAF0B;AAGrCC,YAAAA,eAAe,EAAE,KAHoB;AAIrCC,YAAAA,YAAY,EAAE,IAJuB;AAKrCC,YAAAA,YAAY,EAAE,IALuB;AAMrCC,YAAAA,SAAS,EAAE,IAN0B;AAOrCC,YAAAA,QAAQ,EAAEC,SAP2B;AAQrCC,YAAAA,IAAI,EAAE;AAR+B,WAAjC,CAAL;AAUA,SAbF,EAcEC,KAdF,CAcSpD,KAAD,IAAWC,QAAQ,CAAC,6BAAD,CAd3B;AAeA,OAzBF,EA0BEmD,KA1BF,CA0BSpD,KAAD,IAAWsC,OAAO,CAACC,GAAR,CAAYvC,KAAZ,CA1BnB;AA2BA;AACD,GA1CD;;AA4CA,sBACC;AAAA,4BACC,QAAC,MAAD;AAAA,8BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAM,QAAA,IAAI,EAAC,aAAX;AAAyB,QAAA,OAAO,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAKC,QAAC,WAAD;AAAA,8BACC,QAAC,GAAD;AAAK,QAAA,SAAS,EAAEZ,OAAO,CAACmE,SAAxB;AAAA,gCACC,QAAC,UAAD;AAAY,UAAA,SAAS,EAAC,IAAtB;AAA2B,UAAA,SAAS,EAAEnE,OAAO,CAACoE,OAA9C;AAAA,qBACElE,QAAQ,CAACE,KAAT,GAAiB,QAAjB,GAA4B,KAD9B;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAIC,QAAC,GAAD;AAAK,UAAA,SAAS,EAAEJ,OAAO,CAACqE,OAAxB;AAAA,kCACC;AACC,YAAA,SAAS,EAAErE,OAAO,CAACsE,IADpB;AAEC,YAAA,QAAQ,EAAE7D,YAAY,CACrBP,QAAQ,CAACE,KAAT,GAAiB6D,iBAAjB,GAAqCjB,gBADhB,CAFvB;AAAA,oCAMC,QAAC,GAAD;AAAK,cAAA,SAAS,EAAEhD,OAAO,CAACuE,eAAxB;AAAA,sCACC;AACC,gBAAA,MAAM,EAAC,SADR;AAEC,gBAAA,SAAS,EAAEvE,OAAO,CAACwE,KAFpB;AAGC,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,OAAO,EAAE;AAAX,iBAHR;AAIC,gBAAA,EAAE,EAAC,oBAJJ;AAKC,gBAAA,QAAQ,MALT;AAMC,gBAAA,IAAI,EAAC,MANN;AAOC,gBAAA,QAAQ,EAAEzC;AAPX;AAAA;AAAA;AAAA;AAAA,sBADD,eAUC;AAAO,gBAAA,OAAO,EAAC,oBAAf;AAAA,kDAEC,QAAC,MAAD;AACC,kBAAA,OAAO,EAAC,QADT;AAEC,kBAAA,SAAS,EAAC,MAFX;AAGC,kBAAA,SAAS,EAAEhC,OAAO,CAAC0E,SAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFD;AAAA;AAAA;AAAA;AAAA;AAAA,sBAVD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAND,eA2BC,QAAC,SAAD;AACC,cAAA,KAAK,EAAC,MADP;AAEC,cAAA,OAAO,EAAC,UAFT;AAGC,cAAA,SAAS,EAAE1E,OAAO,CAAC2E,UAHpB;AAAA,iBAIKnE,QAAQ,CAAC,MAAD,CAJb;AAKC,cAAA,QAAQ;AALT;AAAA;AAAA;AAAA;AAAA,oBA3BD,eAkCC,QAAC,SAAD;AACC,cAAA,KAAK,EAAC,MADP;AAEC,cAAA,OAAO,EAAC,UAFT;AAGC,cAAA,SAAS,EAAER,OAAO,CAAC2E,UAHpB;AAAA,iBAIKnE,QAAQ,CAAC,MAAD,CAJb;AAKC,cAAA,QAAQ;AALT;AAAA;AAAA;AAAA;AAAA,oBAlCD,eAyCC,QAAC,SAAD;AACC,cAAA,KAAK,EAAC,OADP;AAEC,cAAA,IAAI,EAAC,QAFN;AAGC,cAAA,OAAO,EAAC,UAHT;AAIC,cAAA,SAAS,EAAER,OAAO,CAAC2E,UAJpB;AAAA,iBAKKnE,QAAQ,CAAC,OAAD,CALb;AAMC,cAAA,QAAQ;AANT;AAAA;AAAA;AAAA;AAAA,oBAzCD,eAiDC,QAAC,WAAD;AAAa,cAAA,SAAS,EAAC,UAAvB;AAAkC,cAAA,SAAS,EAAER,OAAO,CAAC2B,OAArD;AAAA,sCACC,QAAC,UAAD;AAAY,gBAAA,OAAO,EAAC,OAApB;AAA4B,gBAAA,KAAK,EAAE;AAAEiD,kBAAAA,WAAW,EAAE;AAAf,iBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAIC,QAAC,UAAD;AACC,gBAAA,KAAK,EAAE;AAAEC,kBAAAA,QAAQ,EAAE;AAAZ,iBADR;AAEC,gBAAA,OAAO,EAAElE,OAFV;AAGC,gBAAA,YAAY,EAAE,CAAAT,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEE,KAAV,8FAAiBuB,OAAjB,kFAA0BC,QAA1B,OAAwC,MAHvD;AAAA,mBAIKpB,QAAQ,CAAC,SAAD,CAJb;AAKC,gBAAA,QAAQ,MALT;AAMC,gBAAA,MAAM,EAAE,QAAe;AAAA,sBAAd;AAAEsE,oBAAAA;AAAF,mBAAc;AACtB,wBAAM;AAAEC,oBAAAA,MAAF;AAAUC,oBAAAA,QAAV;AAAoB/D,oBAAAA;AAApB,sBAA8B6D,KAApC;AACA,sCACC,QAAC,UAAD;AAAY,oBAAA,KAAK,EAAE;AAAEG,sBAAAA,aAAa,EAAE;AAAjB,qBAAnB;AAAA,uBAAiDH,KAAjD;AAAA,4CACC,QAAC,gBAAD;AACC,sBAAA,KAAK,EAAC,MADP;AAEC,sBAAA,OAAO,eACN,QAAC,KAAD;AACC,wBAAA,KAAK,EAAE;AACNI,0BAAAA,KAAK,EAAE,SADD;AAEN,uCAAa;AACZA,4BAAAA,KAAK,EAAE;AADK;AAFP;AADR;AAAA;AAAA;AAAA;AAAA,8BAHF;AAYC,sBAAA,KAAK,EAAC;AAZP;AAAA;AAAA;AAAA;AAAA,4BADD,eAeC,QAAC,gBAAD;AACC,sBAAA,KAAK,EAAC,OADP;AAEC,sBAAA,OAAO,eACN,QAAC,KAAD;AACC,wBAAA,KAAK,EAAE;AACNA,0BAAAA,KAAK,EAAE,SADD;AAEN,uCAAa;AACZA,4BAAAA,KAAK,EAAE;AADK;AAFP;AADR;AAAA;AAAA;AAAA;AAAA,8BAHF;AAYC,sBAAA,KAAK,EAAC;AAZP;AAAA;AAAA;AAAA;AAAA,4BAfD;AAAA;AAAA;AAAA;AAAA;AAAA,0BADD;AAgCA;AAxCF;AAAA;AAAA;AAAA;AAAA,sBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAjDD,eAgGC,QAAC,SAAD;AACC,cAAA,SAAS,EAAElF,OAAO,CAAC2E,UADpB;AAEC,cAAA,EAAE,EAAC,QAFJ;AAGC,cAAA,KAAK,EAAC,UAHP;AAIC,cAAA,MAAM,MAJP;AAKC,cAAA,OAAO,EAAC,UALT;AAAA,iBAMKnE,QAAQ,CAAC,UAAD,CANb;AAOC,cAAA,YAAY,EAAEN,QAAF,aAAEA,QAAF,2CAAEA,QAAQ,CAAEE,KAAZ,8EAAE,iBAAiBC,QAAnB,0DAAE,sBAA2B6D,GAP1C;AAQC,cAAA,QAAQ,MART;AAAA,wBAUE/D,UAVF,aAUEA,UAVF,uBAUEA,UAAU,CAAE2B,GAAZ,CAAiBzB,QAAD,IAAc;AAC9B,oCACC,QAAC,QAAD;AAAU,kBAAA,KAAK,EAAEA,QAAQ,CAAC6D,GAA1B;AAAA,4BACE7D,QAAQ,CAACkB;AADX,mBAAoClB,QAAQ,CAAC6D,GAA7C;AAAA;AAAA;AAAA;AAAA,wBADD;AAKA,eANA;AAVF;AAAA;AAAA;AAAA;AAAA,oBAhGD,eAmHC,QAAC,YAAD;AACC,cAAA,SAAS,EAAElE,OAAO,CAAC2E,UADpB;AAEC,cAAA,EAAE,EAAC,gBAFJ;AAGC,cAAA,QAAQ,MAHT;AAIC,cAAA,oBAAoB,MAJrB;AAKC,cAAA,KAAK,EAAE1D,KALR;AAMC,cAAA,OAAO,EAAEX,KANV;AAOC,cAAA,cAAc,EAAG6E,MAAD,IAAYA,MAAM,CAAC5D,IAPpC;AAQC,cAAA,iBAAiB,EAAE,CAAC4D,MAAD,EAASlE,KAAT,KAAmBA,KAAK,CAACiD,GAAN,KAAciB,MAAM,CAACjB,GAR5D;AASC,cAAA,WAAW,EAAGkB,MAAD,iBACZ,QAAC,SAAD,OACKA,MADL;AAEC,gBAAA,KAAK,EAAC,MAFP;AAGC,gBAAA,OAAO,EAAC,UAHT;AAIC,gBAAA,SAAS;AAJV;AAAA;AAAA;AAAA;AAAA,sBAVF;AAiBC,cAAA,YAAY,EAAE,CAACD,MAAD;AAAA,oBAAS;AAAEE,kBAAAA;AAAF,iBAAT;AAAA,oCACb;AAAA,0CACC,QAAC,QAAD;AACC,oBAAA,IAAI,EAAExF,IADP;AAEC,oBAAA,WAAW,EAAEC,WAFd;AAGC,oBAAA,KAAK,EAAE;AAAE8E,sBAAAA,WAAW,EAAE;AAAf,qBAHR;AAIC,oBAAA,OAAO,EAAES;AAJV;AAAA;AAAA;AAAA;AAAA,0BADD,EAOEF,MAAM,CAAC5D,IAPT;AAAA,gCADa;AAAA,eAjBf;AA4BC,cAAA,QAAQ,EAAE,CAAC+D,CAAD,EAAIC,eAAJ,KAAwBrE,QAAQ,CAACqE,eAAD;AA5B3C;AAAA;AAAA;AAAA;AAAA,oBAnHD,EAiJE3E,KAAK,KAAK,EAAV,iBACA,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,GAAtB;AAA0B,cAAA,SAAS,EAAEZ,OAAO,CAACY,KAA7C;AAAA,wBACEA;AADF;AAAA;AAAA;AAAA;AAAA,oBAlJF,eAsJC,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,SAAS,EAAEZ,OAAO,CAACwF,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAtJD;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD,eA2JC,QAAC,QAAD;AACC,YAAA,cAAc,EAAE,KADjB;AAEC,YAAA,UAAU,EAAE,KAFb;AAGC,YAAA,UAAU,EAAE,KAHb;AAIC,YAAA,SAAS,EAAExF,OAAO,CAACyF,QAJpB;AAAA,sBAME,CAAAtE,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAE2B,MAAf,IAAwB,CAAxB,IACA3B,aAAa,CAACW,GAAd,CAAmBC,KAAD,IAAW;AAC5B,kCACC;AAAA,uCACC;AAAK,kBAAA,GAAG,EAAEA,KAAK,CAACW,OAAhB;AAAyB,kBAAA,GAAG,EAAC;AAA7B;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,sBADD;AAKA,aAND;AAPF;AAAA;AAAA;AAAA;AAAA,kBA3JD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJD;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAiLC,QAAC,cAAD;AACC,QAAA,QAAQ,EAAC,eADV;AAEC,QAAA,SAAS,EAAE,IAFZ;AAGC,QAAA,eAAe,EAAE,KAHlB;AAIC,QAAA,WAAW,EAAE,KAJd;AAKC,QAAA,YAAY,MALb;AAMC,QAAA,GAAG,EAAE,KANN;AAOC,QAAA,gBAAgB,MAPjB;AAQC,QAAA,SAAS,MARV;AASC,QAAA,YAAY,MATb;AAUC,QAAA,KAAK,EAAC,MAVP;AAWC,QAAA,IAAI,EAAC;AAXN;AAAA;AAAA;AAAA;AAAA,cAjLD;AAAA;AAAA;AAAA;AAAA;AAAA,YALD;AAAA,kBADD;AAuMA,CAnWD;;GAAM3C,c;UACWH,S,EACCZ,W,EACAG,W,EACEF,W,EACLA,W,EACqCJ,O;;;KAN9CkB,c;AAqWN,eAAeA,cAAf","sourcesContent":["import {\n\tBox,\n\tButton,\n\tCheckbox,\n\tFormControl,\n\tFormControlLabel,\n\tMenuItem,\n\tRadio,\n\tRadioGroup,\n\tTextField,\n\tTypography,\n} from '@material-ui/core'\nimport Autocomplete from '@material-ui/lab/Autocomplete'\nimport { unwrapResult } from '@reduxjs/toolkit'\nimport React, { useEffect, useState } from 'react'\nimport { Helmet } from 'react-helmet-async'\nimport { Controller, useForm } from 'react-hook-form'\nimport { BiCheckbox, BiCheckboxChecked } from 'react-icons/bi'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Carousel } from 'react-responsive-carousel'\nimport 'react-responsive-carousel/lib/styles/carousel.min.css' // requires a loader\nimport { useLocation } from 'react-router-dom'\nimport { toast, ToastContainer } from 'react-toastify'\nimport AdminLayout from '../../../../component/admin/AdminLayout/AdminLayout'\nimport { getAllCategory } from '../../../../redux/slices/categorySlice'\nimport {\n\taddProduct,\n\tupdateProduct,\n\tupload,\n} from '../../../../redux/slices/productSlice'\nimport { getAllSize } from '../../../../redux/slices/sizeSlice'\nimport { useStyles } from './styles'\n\nconst icon = <BiCheckbox />\nconst checkedIcon = <BiCheckboxChecked />\n\nconst AddEditProduct = () => {\n\tconst classes = useStyles()\n\tconst dispatch = useDispatch()\n\tconst location = useLocation()\n\tconst categories = useSelector((state) => state.category.categories)\n\tconst sizes = useSelector((state) => state.size.sizes)\n\tconst { register, handleSubmit, reset, control } = useForm()\n\tconst [error, setError] = useState('')\n\n\tuseEffect(() => {\n\t\tconst fetchData = () => {\n\t\t\tconst action = getAllCategory()\n\t\t\tdispatch(action)\n\n\t\t\tconst action2 = getAllSize()\n\t\t\tdispatch(action2)\n\t\t}\n\t\tfetchData()\n\t}, [])\n\n\t// autocomplete\n\tconst [value, setValue] = useState([])\n\n\t// Handle select multiple images\n\tconst [imagesDisplay, setImagesDisplay] = useState([])\n\tconst [imagesUpload, setImagesUpload] = useState([])\n\n\tuseEffect(() => {\n\t\tif (location.state) {\n\t\t\treset({\n\t\t\t\tname: location?.state.name,\n\t\t\t\tdesc: location?.state.desc,\n\t\t\t\tprice: location?.state.price,\n\t\t\t\tquantity: location?.state.quantity,\n\t\t\t\tinStock: location?.state.inStock?.toString(),\n\t\t\t})\n\t\t\tsetImagesDisplay(() => {\n\t\t\t\treturn location.state.images.map((image) => {\n\t\t\t\t\treturn image\n\t\t\t\t})\n\t\t\t})\n\t\t\tsetValue(location.state.size)\n\t\t}\n\t}, [location.state])\n\n\tconst handleOnChangePictures = (e) => {\n\t\tconst files = e.target.files\n\t\tconst arrImagesPreview = []\n\t\tconst arrImagesUpload = []\n\n\t\tArray.from(files)?.forEach((file) => {\n\t\t\tconst image = { preview: URL.createObjectURL(file) }\n\t\t\tarrImagesPreview.push(image)\n\t\t\tarrImagesUpload.push(file)\n\t\t})\n\t\tsetImagesDisplay(arrImagesPreview)\n\t\tsetImagesUpload(arrImagesUpload)\n\t}\n\n\tuseEffect(() => {\n\t\treturn () => {\n\t\t\timagesDisplay?.length > 0 &&\n\t\t\t\timagesDisplay.forEach((image) => {\n\t\t\t\t\tURL.revokeObjectURL(image.preview)\n\t\t\t\t})\n\t\t}\n\t}, [imagesDisplay])\n\n\t// handle product\n\tconst handleAddProduct = (data) => {\n\t\tconsole.log(data)\n\t\tif (imagesUpload.length === 0) {\n\t\t\tsetError('Images are required')\n\t\t\treturn\n\t\t}\n\n\t\tif (value.length === 0) {\n\t\t\tconsole.log(value)\n\t\t\tsetError('Sizes are required')\n\t\t\treturn\n\t\t}\n\n\t\tconst action = upload(imagesUpload)\n\t\tdispatch(action)\n\t\t\t.then(unwrapResult)\n\t\t\t.then((res) => {\n\t\t\t\tconst product = { ...data, size: sizes, images: res }\n\t\t\t\tconst action = addProduct(product)\n\t\t\t\tdispatch(action)\n\t\t\t\t\t.then(unwrapResult)\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\treset()\n\t\t\t\t\t\tsetImagesUpload([])\n\t\t\t\t\t\tsetImagesDisplay([])\n\t\t\t\t\t\tsetError('')\n\t\t\t\t\t\tsetValue([])\n\t\t\t\t\t\ttoast('Add product successfully!', {\n\t\t\t\t\t\t\tposition: 'bottom-center',\n\t\t\t\t\t\t\tautoClose: 3000,\n\t\t\t\t\t\t\thideProgressBar: false,\n\t\t\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\t\t\tpauseOnHover: true,\n\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\tprogress: undefined,\n\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t\t.catch((error) => setError('Name has already been taken'))\n\t\t\t})\n\t\t\t.catch((error) => console.log(error))\n\t}\n\n\tconst handleEditProduct = (data) => {\n\t\tif (imagesUpload.length === 0) {\n\t\t\t// Not change images\n\t\t\tconst sizes = value.map((size) => {\n\t\t\t\treturn size._id\n\t\t\t})\n\t\t\tconst product = { ...data, size: sizes, _id: location.state._id }\n\t\t\tconst action = updateProduct(product)\n\t\t\tdispatch(action)\n\t\t\t\t.then(unwrapResult)\n\t\t\t\t.then(() => {})\n\t\t\t\t.catch((error) => setError('Name has already been taken'))\n\t\t} else {\n\t\t\tconst action = upload(imagesUpload)\n\t\t\tdispatch(action)\n\t\t\t\t.then(unwrapResult)\n\t\t\t\t.then((res) => {\n\t\t\t\t\tconst product = {\n\t\t\t\t\t\t...data,\n\t\t\t\t\t\tsize: sizes,\n\t\t\t\t\t\t_id: location.state._id,\n\t\t\t\t\t\timages: res,\n\t\t\t\t\t}\n\t\t\t\t\tconst action = updateProduct(product)\n\t\t\t\t\tdispatch(action)\n\t\t\t\t\t\t.then(unwrapResult)\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\ttoast('Update product successfully!', {\n\t\t\t\t\t\t\t\tposition: 'bottom-center',\n\t\t\t\t\t\t\t\tautoClose: 3000,\n\t\t\t\t\t\t\t\thideProgressBar: false,\n\t\t\t\t\t\t\t\tcloseOnClick: true,\n\t\t\t\t\t\t\t\tpauseOnHover: true,\n\t\t\t\t\t\t\t\tdraggable: true,\n\t\t\t\t\t\t\t\tprogress: undefined,\n\t\t\t\t\t\t\t\ttype: 'success',\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch((error) => setError('Name has already been taken'))\n\t\t\t\t})\n\t\t\t\t.catch((error) => console.log(error))\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Helmet>\n\t\t\t\t<title>Reno - Admin</title>\n\t\t\t\t<meta name=\"description\" content=\"Helmet application\" />\n\t\t\t</Helmet>\n\t\t\t<AdminLayout>\n\t\t\t\t<Box className={classes.container}>\n\t\t\t\t\t<Typography component=\"h3\" className={classes.heading}>\n\t\t\t\t\t\t{location.state ? 'Update' : 'New'} product\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Box className={classes.content}>\n\t\t\t\t\t\t<form\n\t\t\t\t\t\t\tclassName={classes.form}\n\t\t\t\t\t\t\tonSubmit={handleSubmit(\n\t\t\t\t\t\t\t\tlocation.state ? handleEditProduct : handleAddProduct\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<Box className={classes.uploadContainer}>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\taccept=\"image/*\"\n\t\t\t\t\t\t\t\t\tclassName={classes.input}\n\t\t\t\t\t\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\t\t\t\t\t\tid=\"raised-button-file\"\n\t\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\t\t\t\tonChange={handleOnChangePictures}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<label htmlFor=\"raised-button-file\">\n\t\t\t\t\t\t\t\t\tImages\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tvariant=\"raised\"\n\t\t\t\t\t\t\t\t\t\tcomponent=\"span\"\n\t\t\t\t\t\t\t\t\t\tclassName={classes.uploadBtn}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tUpload\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tclassName={classes.inputGroup}\n\t\t\t\t\t\t\t\t{...register('name')}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tlabel=\"Desc\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tclassName={classes.inputGroup}\n\t\t\t\t\t\t\t\t{...register('desc')}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tlabel=\"Price\"\n\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\tclassName={classes.inputGroup}\n\t\t\t\t\t\t\t\t{...register('price')}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormControl component=\"fieldset\" className={classes.inStock}>\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\" style={{ marginRight: 20 }}>\n\t\t\t\t\t\t\t\t\tIn stock:\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t\t<Controller\n\t\t\t\t\t\t\t\t\trules={{ required: true }}\n\t\t\t\t\t\t\t\t\tcontrol={control}\n\t\t\t\t\t\t\t\t\tdefaultValue={location?.state?.inStock?.toString() || 'true'}\n\t\t\t\t\t\t\t\t\t{...register('inStock')}\n\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\trender={({ field }) => {\n\t\t\t\t\t\t\t\t\t\tconst { onBlur, onChange, value } = field\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<RadioGroup style={{ flexDirection: 'row' }} {...field}>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"true\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#1a202c',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'&$checked': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#1a202c',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"True\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue=\"false\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontrol={\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Radio\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#1a202c',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'&$checked': {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor: '#1a202c',\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel=\"false\"\n\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t</RadioGroup>\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\tclassName={classes.inputGroup}\n\t\t\t\t\t\t\t\tid=\"select\"\n\t\t\t\t\t\t\t\tlabel=\"Category\"\n\t\t\t\t\t\t\t\tselect\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t{...register('category')}\n\t\t\t\t\t\t\t\tdefaultValue={location?.state?.category?._id}\n\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{categories?.map((category) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<MenuItem value={category._id} key={category._id}>\n\t\t\t\t\t\t\t\t\t\t\t{category.name}\n\t\t\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</TextField>\n\n\t\t\t\t\t\t\t<Autocomplete\n\t\t\t\t\t\t\t\tclassName={classes.inputGroup}\n\t\t\t\t\t\t\t\tid=\"combo-box-demo\"\n\t\t\t\t\t\t\t\tmultiple\n\t\t\t\t\t\t\t\tdisableCloseOnSelect\n\t\t\t\t\t\t\t\tvalue={value}\n\t\t\t\t\t\t\t\toptions={sizes}\n\t\t\t\t\t\t\t\tgetOptionLabel={(option) => option.name}\n\t\t\t\t\t\t\t\tgetOptionSelected={(option, value) => value._id === option._id}\n\t\t\t\t\t\t\t\trenderInput={(params) => (\n\t\t\t\t\t\t\t\t\t<TextField\n\t\t\t\t\t\t\t\t\t\t{...params}\n\t\t\t\t\t\t\t\t\t\tlabel=\"Size\"\n\t\t\t\t\t\t\t\t\t\tvariant=\"outlined\"\n\t\t\t\t\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\trenderOption={(option, { selected }) => (\n\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\ticon={icon}\n\t\t\t\t\t\t\t\t\t\t\tcheckedIcon={checkedIcon}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{ marginRight: 8 }}\n\t\t\t\t\t\t\t\t\t\t\tchecked={selected}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t{option.name}\n\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tonChange={(_, selectedOptions) => setValue(selectedOptions)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t{error !== '' && (\n\t\t\t\t\t\t\t\t<Typography component=\"p\" className={classes.error}>\n\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Button type=\"submit\" className={classes.saveBtn}>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t\t<Carousel\n\t\t\t\t\t\t\tshowIndicators={false}\n\t\t\t\t\t\t\tshowArrows={false}\n\t\t\t\t\t\t\tshowStatus={false}\n\t\t\t\t\t\t\tclassName={classes.carousel}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{imagesDisplay?.length > 0 &&\n\t\t\t\t\t\t\t\timagesDisplay.map((image) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t\t\t\t<img src={image.preview} alt=\"imageproduct\" />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</Carousel>\n\t\t\t\t\t</Box>\n\t\t\t\t</Box>\n\t\t\t\t<ToastContainer\n\t\t\t\t\tposition=\"bottom-center\"\n\t\t\t\t\tautoClose={3000}\n\t\t\t\t\thideProgressBar={false}\n\t\t\t\t\tnewestOnTop={false}\n\t\t\t\t\tcloseOnClick\n\t\t\t\t\trtl={false}\n\t\t\t\t\tpauseOnFocusLoss\n\t\t\t\t\tdraggable\n\t\t\t\t\tpauseOnHover\n\t\t\t\t\ttheme=\"dark\"\n\t\t\t\t\ttype=\"default\"\n\t\t\t\t/>\n\t\t\t</AdminLayout>\n\t\t</>\n\t)\n}\n\nexport default AddEditProduct\n"]},"metadata":{},"sourceType":"module"}