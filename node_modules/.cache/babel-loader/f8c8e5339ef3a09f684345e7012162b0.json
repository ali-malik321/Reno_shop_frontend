{"ast":null,"code":"import axiosClient from './axiosClient';\nconst orderAPI = {\n  getAllOrder: async userId => {\n    const url = '/orders';\n\n    if (userId) {\n      return await axiosClient.get(url, userId);\n    } else {\n      return await axiosClient.get(url);\n    }\n  },\n  addOrder: async data => {\n    const url = '/orders';\n    return await axiosClient.post(url, {\n      data\n    });\n  },\n  updateOrder: async data => {\n    const url = `/orders/${data.id}`;\n    return await axiosClient.put(url, {\n      data\n    });\n  },\n  getOrder: async id => {\n    const url = `/orders/${id}`;\n    return await axiosClient.get(url);\n  },\n  deleteOrder: async id => {\n    const url = `/orders/${id}`;\n    return await axiosClient.delete(url);\n  }\n};\nexport default orderAPI;","map":{"version":3,"sources":["/home/ali/Reno-shoe-shop/client/src/api/orderApi.js"],"names":["axiosClient","orderAPI","getAllOrder","userId","url","get","addOrder","data","post","updateOrder","id","put","getOrder","deleteOrder","delete"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,eAAxB;AAEA,MAAMC,QAAQ,GAAG;AAChBC,EAAAA,WAAW,EAAE,MAAOC,MAAP,IAAkB;AAC9B,UAAMC,GAAG,GAAG,SAAZ;;AAEA,QAAID,MAAJ,EAAY;AACX,aAAO,MAAMH,WAAW,CAACK,GAAZ,CAAgBD,GAAhB,EAAqBD,MAArB,CAAb;AACA,KAFD,MAEO;AACN,aAAO,MAAMH,WAAW,CAACK,GAAZ,CAAgBD,GAAhB,CAAb;AACA;AACD,GATe;AAWhBE,EAAAA,QAAQ,EAAE,MAAOC,IAAP,IAAgB;AACzB,UAAMH,GAAG,GAAG,SAAZ;AACA,WAAO,MAAMJ,WAAW,CAACQ,IAAZ,CAAiBJ,GAAjB,EAAsB;AAAEG,MAAAA;AAAF,KAAtB,CAAb;AACA,GAde;AAgBhBE,EAAAA,WAAW,EAAE,MAAOF,IAAP,IAAgB;AAC5B,UAAMH,GAAG,GAAI,WAAUG,IAAI,CAACG,EAAG,EAA/B;AACA,WAAO,MAAMV,WAAW,CAACW,GAAZ,CAAgBP,GAAhB,EAAqB;AAAEG,MAAAA;AAAF,KAArB,CAAb;AACA,GAnBe;AAqBhBK,EAAAA,QAAQ,EAAE,MAAOF,EAAP,IAAc;AACvB,UAAMN,GAAG,GAAI,WAAUM,EAAG,EAA1B;AACA,WAAO,MAAMV,WAAW,CAACK,GAAZ,CAAgBD,GAAhB,CAAb;AACA,GAxBe;AA0BhBS,EAAAA,WAAW,EAAE,MAAOH,EAAP,IAAc;AAC1B,UAAMN,GAAG,GAAI,WAAUM,EAAG,EAA1B;AACA,WAAO,MAAMV,WAAW,CAACc,MAAZ,CAAmBV,GAAnB,CAAb;AACA;AA7Be,CAAjB;AAgCA,eAAeH,QAAf","sourcesContent":["import axiosClient from './axiosClient'\n\nconst orderAPI = {\n\tgetAllOrder: async (userId) => {\n\t\tconst url = '/orders'\n\n\t\tif (userId) {\n\t\t\treturn await axiosClient.get(url, userId)\n\t\t} else {\n\t\t\treturn await axiosClient.get(url)\n\t\t}\n\t},\n\n\taddOrder: async (data) => {\n\t\tconst url = '/orders'\n\t\treturn await axiosClient.post(url, { data })\n\t},\n\n\tupdateOrder: async (data) => {\n\t\tconst url = `/orders/${data.id}`\n\t\treturn await axiosClient.put(url, { data })\n\t},\n\n\tgetOrder: async (id) => {\n\t\tconst url = `/orders/${id}`\n\t\treturn await axiosClient.get(url)\n\t},\n\n\tdeleteOrder: async (id) => {\n\t\tconst url = `/orders/${id}`\n\t\treturn await axiosClient.delete(url)\n\t},\n}\n\nexport default orderAPI\n"]},"metadata":{},"sourceType":"module"}