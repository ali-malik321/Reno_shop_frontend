{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport categoryAPI from '../../api/categoryApi';\nexport const getAllCategory = createAsyncThunk('category/getAllCategory', async (_, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n\n  try {\n    return await categoryAPI.getAllCategory();\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const getCategory = createAsyncThunk('category/getCategory', async (id, _ref2) => {\n  let {\n    rejectWithValue\n  } = _ref2;\n\n  try {\n    return await categoryAPI.getCategory(id);\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const addCategory = createAsyncThunk('category/addCategory', async (data, _ref3) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref3;\n\n  try {\n    const result = await categoryAPI.addCategory(data);\n    dispatch(getAllCategory());\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const updateCategory = createAsyncThunk('category/updateCategory', async (data, _ref4) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref4;\n\n  try {\n    const result = await categoryAPI.updateCategory(data);\n    dispatch(getAllCategory());\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nexport const deleteCategory = createAsyncThunk('category/deleteCategory', async (id, _ref5) => {\n  let {\n    rejectWithValue,\n    dispatch\n  } = _ref5;\n\n  try {\n    const result = await categoryAPI.deleteCategory(id);\n    dispatch(getAllCategory());\n    return result;\n  } catch (error) {\n    return rejectWithValue(error.response);\n  }\n});\nconst initialState = {\n  categories: [],\n  categoriesLoading: false,\n  category: {},\n  categoryLoading: false\n};\nconst categorySlice = createSlice({\n  name: 'category',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getAllCategory.pending]: state => {\n      state.categoriesLoading = true;\n    },\n    [getAllCategory.fulfilled]: (state, action) => {\n      state.categoriesLoading = false;\n      state.categories = action.payload.categories;\n    }\n  }\n});\nexport default categorySlice.reducer;","map":{"version":3,"sources":["/home/ali/Reno-shoe-shop-frontend/client/src/redux/slices/categorySlice.js"],"names":["createAsyncThunk","createSlice","categoryAPI","getAllCategory","_","rejectWithValue","error","response","getCategory","id","addCategory","data","dispatch","result","updateCategory","deleteCategory","initialState","categories","categoriesLoading","category","categoryLoading","categorySlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport categoryAPI from '../../api/categoryApi'\n\nexport const getAllCategory = createAsyncThunk(\n\t'category/getAllCategory',\n\tasync (_, { rejectWithValue }) => {\n\t\ttry {\n\t\t\treturn await categoryAPI.getAllCategory()\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const getCategory = createAsyncThunk(\n\t'category/getCategory',\n\tasync (id, { rejectWithValue }) => {\n\t\ttry {\n\t\t\treturn await categoryAPI.getCategory(id)\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const addCategory = createAsyncThunk(\n\t'category/addCategory',\n\tasync (data, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await categoryAPI.addCategory(data)\n\n\t\t\tdispatch(getAllCategory())\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const updateCategory = createAsyncThunk(\n\t'category/updateCategory',\n\tasync (data, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await categoryAPI.updateCategory(data)\n\n\t\t\tdispatch(getAllCategory())\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nexport const deleteCategory = createAsyncThunk(\n\t'category/deleteCategory',\n\tasync (id, { rejectWithValue, dispatch }) => {\n\t\ttry {\n\t\t\tconst result = await categoryAPI.deleteCategory(id)\n\n\t\t\tdispatch(getAllCategory())\n\n\t\t\treturn result\n\t\t} catch (error) {\n\t\t\treturn rejectWithValue(error.response)\n\t\t}\n\t}\n)\n\nconst initialState = {\n\tcategories: [],\n\tcategoriesLoading: false,\n\tcategory: {},\n\tcategoryLoading: false,\n}\n\nconst categorySlice = createSlice({\n\tname: 'category',\n\tinitialState,\n\treducers: {},\n\textraReducers: {\n\t\t[getAllCategory.pending]: (state) => {\n\t\t\tstate.categoriesLoading = true\n\t\t},\n\t\t[getAllCategory.fulfilled]: (state, action) => {\n\t\t\tstate.categoriesLoading = false\n\t\t\tstate.categories = action.payload.categories\n\t\t},\n\t},\n})\n\nexport default categorySlice.reducer\n"]},"metadata":{},"sourceType":"module"}